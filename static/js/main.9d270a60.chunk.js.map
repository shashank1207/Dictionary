{"version":3,"sources":["word.js","Nav.js","search.png","App.js","reportWebVitals.js","index.js"],"names":["Word","words","i","wordList","definitions","map","word","className","emoji","type","definition","example","pronunciation","Nav","getApi","find","useState","search","setSearch","query","setQuery","useEffect","onSubmit","e","preventDefault","value","onChange","target","placeholder","src","alt","App","setWords","require","Owlbot","define","then","result","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAsCeA,G,MApCH,SAAC,GAAY,IAAXC,EAAU,EAAVA,MAENC,GAAG,EACDC,EAAWF,EAAMG,YAAYC,KAAI,SAAAC,GAEnC,OADAJ,IAEI,sBAAaK,UAAU,iBAAvB,UACI,8BACKD,EAAKE,QAEV,qBAAKD,UAAU,OAAf,SACKD,EAAKG,OAEV,qBAAKF,UAAU,aAAf,SACKD,EAAKI,aAEV,qBAAKH,UAAU,UAAf,SACKD,EAAKK,YAXJT,MAiBlB,OACI,sBAAKK,UAAU,iBAAf,UACI,qBAAKA,UAAU,gBAAf,SACSN,EAAMK,OAEf,sBAAKC,UAAU,gBAAf,4BACoBN,EAAMW,iBAEzBT,OCCEU,MA/Bf,YAA8B,IAAhBC,EAAe,EAAfA,OAAQC,EAAO,EAAPA,KAAO,EACGC,mBAAS,IADZ,mBAClBC,EADkB,KACVC,EADU,OAGCF,mBAAS,cAHV,mBAGlBG,EAHkB,KAGXC,EAHW,KAmBzB,OAJAC,qBAAU,WACNP,EAAOK,KACT,CAACA,IAGC,8BACI,uBAAMZ,UAAU,aAAae,SAZnB,SAAAC,GAClBA,EAAEC,iBACFJ,EAASH,GACTC,EAAU,KASF,UACI,uBAAOX,UAAU,YAAYE,KAAK,OAAOgB,MAAOR,EAAQS,SAjB/C,SAAAH,GACjBL,EAAUK,EAAEI,OAAOF,QAgBqEG,YAAa,sBAC7F,wBAAQnB,KAAK,SAASF,UAAU,eAAhC,SACI,qBAAKsB,IAAKd,EAAMe,IAAI,SAASvB,UAAU,iBC3B5C,MAA0B,mCCqC1BwB,MA/Bf,WAAgB,IAAD,EAEYf,qBAFZ,mBAEPf,EAFO,KAEA+B,EAFA,KAeb,OACE,sBAAKzB,UAAU,MAAf,UACE,cAAC,EAAD,CAAKO,OAZM,SAACK,GACDc,EAAQ,GAERC,CAAO,4CAEbC,OAAOhB,GAAOiB,MAAK,SAASC,GACjCL,EAASK,OAMYtB,KAAME,IAEzBhB,EAMF,cAAC,EAAD,CAAMA,MAASA,IANP,sBAAKqC,MAAM,UAAX,UACN,wBACA,wBACA,wBACA,+BCjBOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9d270a60.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Word =({words}) =>{\r\n\r\n    var i=-1;\r\n    const wordList = words.definitions.map(word=>{\r\n        i++;\r\n        return(\r\n            <div key={i} className='defi-container'>\r\n                <div>\r\n                    {word.emoji}\r\n                </div>\r\n                <div className='type'>\r\n                    {word.type}\r\n                </div>\r\n                <div className='definition'>\r\n                    {word.definition}\r\n                </div>\r\n                <div className='example'>\r\n                    {word.example}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    })\r\n    return(\r\n        <div className='word-container'>\r\n            <div className='searched-word'>\r\n                    {words.word}\r\n            </div>\r\n            <div className='pronunciation'>\r\n                Pronunciation: {words.pronunciation}\r\n            </div>\r\n            {wordList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Word;","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nfunction Nav({getApi, find}) {\r\n    const [search, setSearch] = useState('');\r\n\r\n    const [query, setQuery] = useState('Dictionary');\r\n\r\n    const updateSearch = e => {\r\n        setSearch(e.target.value)\r\n    }\r\n    \r\n    const getSearch = e => {\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        getApi(query);\r\n    },[query])\r\n\r\n    return(\r\n        <nav>\r\n            <form className='searchForm' onSubmit={getSearch} >\r\n                <input className='searchBar' type=\"text\" value={search} onChange={updateSearch} placeholder= 'Search Dictionary'  />\r\n                <button type='submit' className='submitButton'>\r\n                    <img src={find} alt='search' className='find'/>\r\n                </button>\r\n            </form>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;\r\n","export default __webpack_public_path__ + \"static/media/search.83b5c51e.png\";","import React, {useState} from 'react';\nimport './App.css';\nimport Word from './word';\nimport Nav from './Nav'\nimport search from './search.png';\n\nfunction App() {\n\n  const[words, setWords] = useState();\n  // const[isSelected, setIsSelected] = useState();\n\n  const getApi = (query) =>{\n    var Owlbot = require('owlbot-js');\n  \n    var client = Owlbot('52f0faa6d4b3cd8f9cca6b441ab176dc26dbb921');\n  \n    client.define(query).then(function(result){\n      setWords(result);\n    });\n  }\n\n  return (\n    <div className='App'>\n      <Nav getApi={getApi} find={search}/>\n\n      {!words?<div class=\"bouncer\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        </div>:\n      <Word words = {words} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}